package smartwake.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserLoginAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserLoginAllPropertiesEquals(UserLogin expected, UserLogin actual) {
        assertUserLoginAutoGeneratedPropertiesEquals(expected, actual);
        assertUserLoginAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserLoginAllUpdatablePropertiesEquals(UserLogin expected, UserLogin actual) {
        assertUserLoginUpdatableFieldsEquals(expected, actual);
        assertUserLoginUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserLoginAutoGeneratedPropertiesEquals(UserLogin expected, UserLogin actual) {
        assertThat(expected)
            .as("Verify UserLogin auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserLoginUpdatableFieldsEquals(UserLogin expected, UserLogin actual) {
        assertThat(expected)
            .as("Verify UserLogin relevant properties")
            .satisfies(e -> assertThat(e.getUsername()).as("check username").isEqualTo(actual.getUsername()))
            .satisfies(e -> assertThat(e.getPassword()).as("check password").isEqualTo(actual.getPassword()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserLoginUpdatableRelationshipsEquals(UserLogin expected, UserLogin actual) {}
}
